with "config/stm32_drivers_config.gpr";
project Stm32_Drivers is

   for Target use "arm-eabi";
   for Runtime ("Ada") use "light-tasking-stm32f746disco";

   for Library_Name use "Stm32_Drivers";
   for Library_Version use Project'Library_Name & ".so." & Stm32_Drivers_Config.Crate_Version;

   Src_Dirs := ();
   case stm32_drivers_config.ADC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/adc/v1/");
   end case;
   case stm32_drivers_config.DAC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/dac/v1/");
   end case;
   case stm32_drivers_config.DMA is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/dma/v1/");
   end case;
   case stm32_drivers_config.DMA_INTERRUPTS is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/dma_interrupts/v1/");
   end case;
   case stm32_drivers_config.DMA2D is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/dma2d/v1/");
   end case;
   case stm32_drivers_config.FMC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/fmc/v1/");
   end case;
   case stm32_drivers_config.GPIO is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/gpio/v1/");
   end case;
   case stm32_drivers_config.LTDC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/ltdc/v1/");
   end case;
   case stm32_drivers_config.POWER_CONTROL is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/power_control/v1/");
   end case;
   case stm32_drivers_config.I2C is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/i2c/v1/");
   end case;
   case stm32_drivers_config.I2S is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/i2s/v1/");
   end case;
   case stm32_drivers_config.RCC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/rcc/v1/");
   end case;
   case stm32_drivers_config.RNG is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/rng/v1/");
   end case;
   case stm32_drivers_config.SAI is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/sai/v1/");
   end case;
   case stm32_drivers_config.RTC is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/rtc/v1/");
   end case;
   case stm32_drivers_config.SPI is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/spi/v1/");
   end case;
   case stm32_drivers_config.TIMERS is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/timers/v1/");
   end case;
   case stm32_drivers_config.SYSCFG is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/syscfg/v1/");
   end case;
   case stm32_drivers_config.EXTI is
      when "v1" =>
         Src_Dirs := Src_Dirs & ("src/exti/v1/");
   end case;

   for Source_Dirs use ("src/", "config/") & Src_Dirs;
   for Object_Dir use "obj/" & Stm32_Drivers_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("STM32_DRIVERS_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Stm32_Drivers_Config.Ada_Compiler_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Stm32_Drivers;
